%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%These files should be under this directry.%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
*Tree.h
for Tree, Branch

*Tree.cc

*ParamMan.h
TDC offset, etc.

*ParamMan.cc

*define.h
physics constant

*Param.h
offset parameters are defined.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

*tuning_ac_oku.cc
Macrofile for tuning AC counters & development.
This concept is based on hrs_tuningAC.h (by Itabashi-san),
but the analysis inside is taken over from ana_Lambda.cc


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Survival Ratio Study vs Cut parameters (AC, Z, FP, Chi2, Cointime)%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
*eff_z.cc
For development
"tuning_ac_oku.cc" can be used for optimization of 2D scanning,
but "eff_z.cc" can be used for 1D.

Efficiency Study
*eff_ac.cc
-sr_test*.pdf

*eff_z2d.cc
-zsr*.pdf

*eff_fp.cc
-fpcut.pdf

*eff_chi2.cc
-chi2sr*.pdf

*eff_coin.cc
-coinsr*.pdf
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Differential Cross Section%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
*result_2D.C
-CS Calc.
-(Number of hyperons)/(DAQ Eff. x Solid Angle)
-Solid Angle --> DeltaOmega(P_K,Z);2D
-Fitting with radiative tails
-Event by Event (DAQ Eff. & Solid Angle (K+) only)
-Other factors are calculated using google spreadsheet

*Eff_with_Radtail/fit_Lexp_best_acz.C
-Efficiency study (AC, Z, CT) with Radiative tail fitting
-(Landau + Exp)*Gaus

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Systematic Error Study%%
%%%%%%%%%%%%%%%%%%%%%%%%%%
*z_analyzer.cc --> h2all_old.cc --> h2all.cc (2020/8/24 big update)
-taken over from eff_z.cc
This can create rootfile including "Cointime" and "Missing Mass" with each cut conditions (Z Cut).
If you want to study in detail for each cut conditon, you can just use this rootfile.
That means you don't have to re-analyze all runs (run111157~111220) anymore. (as long as you didn't change other cut conditions)

%%% C macros (you can use these like "root kinemtacs.C")
*kinematics.C
-Kinematics calc. with TLorentzVector

%%mea_hist_noarray.C vs mea_hist.C
%%data structure is a little bit different
%%I prefer "noarray mode"
*mea_hist_noarray.C
-Mixed Event Analysis

*fit_many.C (noarray)
-Fitting MM with 4Poly, Gauss and Voigt func.
(Integral() range change)
**fit_many_1sigma.C
**fit_many_halfsigma.C

*fit_resp.C (noarray)
-taken over from fit_many.C
-Radiative tail is taken into account (as a response func.)


%%%%%%%%%%%%%%%%%
%%AC Gain Study%%
%%%%%%%%%%%%%%%%%
*gain_all_segment.cc
This can fit all AC segments' ADC distribution and get 1p.e. position, run by run.
This information is stored in "gain_run111???.dat"

*each_graph.cc
This shows all AC segments' run dependences from "gain_run111???.dat"
2 x 2 display


%%%%%%%%%%%%%%%%
%%Output files%%
%%%%%%%%%%%%%%%%
***h2all.root
-updated version (Aug. 23, 2020)
-consistency check with ana_Lambda.cc was performed.

*h2all3.root
-ct[][] (array mode)

*h2all5.root
-maybe old ver.

***bgmea6.root
-6 bunches x 100 mixtures = 600 effective bunches

*bgmea7.root
-including MM(Al)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
